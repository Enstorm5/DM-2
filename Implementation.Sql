-- 1 Departments Table
CREATE TABLE Departments (
   department_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   department_name VARCHAR2(100) NOT NULL
);

-- 2 Professors Table
CREATE TABLE Professors (
   professor_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   first_name VARCHAR2(50) NOT NULL,
   last_name VARCHAR2(50) NOT NULL,
   hire_date DATE NOT NULL,  
   department_id NUMBER NOT NULL,
   FOREIGN KEY (department_id) REFERENCES Departments(department_id) ON DELETE CASCADE
);

-- 3 Hostal Table 
CREATE TABLE Hostal (
   hostal_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   hostal_name VARCHAR2(100) NOT NULL UNIQUE, 
   location VARCHAR2(200) NOT NULL,
   professor_id NUMBER NOT NULL,
   FOREIGN KEY (professor_id) REFERENCES Professors(professor_id) ON DELETE CASCADE
);

-- 4 Clubs Table
CREATE TABLE Clubs (
   club_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   club_name VARCHAR2(100) NOT NULL,
   club_type VARCHAR2(50) NOT NULL
);

-- 5 Library_books Table
CREATE TABLE Library_books (
   book_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   book_title VARCHAR2(150) NOT NULL,
   author VARCHAR2(100) NOT NULL,
   publication_year NUMBER NOT NULL
);

-- 6 Classes Table
CREATE TABLE Classes (
   class_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   class_name VARCHAR2(100) NOT NULL,
   professor_id NUMBER NOT NULL,
   class_time TIMESTAMP NOT NULL,
   FOREIGN KEY (professor_id) REFERENCES Professors(professor_id) ON DELETE CASCADE
);

-- 7 Students Table
CREATE TABLE Students (
   student_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   first_name VARCHAR2(50) NOT NULL,
   last_name VARCHAR2(50) NOT NULL,
   dob DATE NOT NULL,
   class_id NUMBER NOT NULL CHECK (class_id > 0), 
   club_id NUMBER CHECK (club_id > 0), 
   hostal_id NUMBER CHECK (hostal_id > 0), 
   FOREIGN KEY (class_id) REFERENCES Classes(class_id) ON DELETE CASCADE,
   FOREIGN KEY (club_id) REFERENCES Clubs(club_id) ON DELETE CASCADE,
   FOREIGN KEY (hostal_id) REFERENCES Hostal(hostal_id) ON DELETE CASCADE
);

-- 8 Courses Table
CREATE TABLE Courses (
   course_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   course_name VARCHAR2(100) NOT NULL,
   credits NUMBER NOT NULL CHECK (credits BETWEEN 1 AND 5), -
   professor_id NUMBER NOT NULL,
   department_id NUMBER NOT NULL,
   FOREIGN KEY (professor_id) REFERENCES Professors(professor_id) ON DELETE CASCADE,
   FOREIGN KEY (department_id) REFERENCES Departments(department_id) ON DELETE CASCADE
);

-- 9 Enrollments Table
CREATE TABLE Enrollments (
   enrollment_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   student_id NUMBER NOT NULL,
   course_id NUMBER NOT NULL,
   enrollment_date DATE NOT NULL, 
   FOREIGN KEY (student_id) REFERENCES Students(student_id) ON DELETE CASCADE,
   FOREIGN KEY (course_id) REFERENCES Courses(course_id) ON DELETE CASCADE
);

-- 10 Exams Table
CREATE TABLE Exams (
   exam_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   exam_date DATE NOT NULL, 
   exam_type VARCHAR2(50) NOT NULL CHECK (exam_type IN ('Exam', 'Course Work', 'Quiz')), 
   course_id NUMBER NOT NULL,
   FOREIGN KEY (course_id) REFERENCES Courses(course_id) ON DELETE CASCADE
);

-- 11 Results Table
CREATE TABLE Results (
   result_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   student_id NUMBER NOT NULL,
   exam_id NUMBER NOT NULL,
   score NUMBER NOT NULL CHECK (score BETWEEN 0 AND 100), 
   FOREIGN KEY (student_id) REFERENCES Students(student_id) ON DELETE CASCADE,
   FOREIGN KEY (exam_id) REFERENCES Exams(exam_id) ON DELETE CASCADE
);

-- 12 Scholarships Table
CREATE TABLE Scholarships (
   scholarship_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   student_id NUMBER NOT NULL,
   scholarship_type VARCHAR2(100) NOT NULL,
   amount NUMBER NOT NULL CHECK (amount > 0), 
   FOREIGN KEY (student_id) REFERENCES Students(student_id) ON DELETE CASCADE
);

-- 13 Library_memberships Table
CREATE TABLE Library_memberships (
   membership_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   membership_date DATE NOT NULL, 
   student_id NUMBER NOT NULL,
   book_id NUMBER NOT NULL,
   FOREIGN KEY (student_id) REFERENCES Students(student_id) ON DELETE CASCADE,
   FOREIGN KEY (book_id) REFERENCES Library_books(book_id) ON DELETE CASCADE
);
